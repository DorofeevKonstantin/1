История языка Си.
Компилируемые и интерпретируемые языки. Преимущества и недостатки.
Байт, бит, общее представление памяти.
Типы данных, размер, максимальные и минимальные значения, знаковость.
Именование переменных, выравнивание в коде.
Двоичное представление целых чисел (>0, <0). Таблица ASCII.
Все арифметические, логические, побитовые операции.
Три вида циклов в Си. Базовое понятие указателя в Си.
Операторы break, continue, switch. Отладка в VS.
Статические одномерные массивы. Null-terminated строки в Си.
Статические многомерные массивы. Файловый ввод/вывод.
Сортировка пузырьком.
Указатель. Разыменование указателя. Размер указателя.
Операторы &, *, вывод адреса в консоль. Отличия указателей на разные типы.
Динамические одномерные массивы. malloc, арифметика указателей.
Область видимости переменных, примеры. Случайные числа, srand, rand.
Базовое понятие функций.
Виды памяти: стек, глобальная/статическая память, куча.
Указатель на указатель. Многомерные динамические массивы.
Параметры функции main: argc,argv,env.
Функции. Передача параметров по-значению. Передача массива в функцию.
Различные соглашения о вызовах функций в Си. Подробно cdecl.
Многофайловая разработка. Раздельная компиляция. Include Guards.
Компиляция, линковка. Команды компиляции и линковки.
Консоль разработчика VS, синтаксис gcc, cl, link.
Рекурсивные функции.
char*** mass;  Правильное выделение и освобождение памяти.
Практика использования heap: 4 варианта int** mass.
Измерение времени выполнения участка кода. clock, time.
Перенаправление ввода/вывода (<,>,>>).
Директивы препроцессора. #include #define #ifdef #ifndef.
Оператор typedef. (104,156 K&R).
Условное включение. Кроссплатформенность в Си. #if #elif #else (104 K&R).
Простые структуры. Ввод/вывод структур.
Объединения (158 K&R), битовые поля (159 K&R), перечисления (230 K&R).
Структуры с динамическими полями.
Массивы структур. Структуры внутри структур.
Реализация множества (Set).
Реализация односвязного списка (Linked_List).
Реализация двусвязного списка (List). Сортировка пузырьком.
Реализация стека (Stack).
Простые алгоритмы: рекурсивная сумма разрядов, бинарный поиск,
поворот матрицы, поиск середины односвязного списка, быстрое
возведение в степень, swap без tmp, НОД.
Хороший код. Объективные и субъективные критерии оценки качества.
Сортировка односвязного списка списком стеков.